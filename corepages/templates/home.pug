{% extends 'base.pug' %}
{% load static i18n %}
{% block title %} {{page_title}} {% endblock title %}
{% block content %}
.main-content
  h1 {% trans "Hi! I'm <span class='fw400'> Mx3</span>, a" %}
    br
    span#typedTitle
    span#typedTitleSource
      p {% trans "web developer." %}
      p {% trans "music producer." %}
      p {% trans "graphist." %}
      p {% trans "VFX artist." %}
      p {% trans "motion designer." %}
  p.intro
    | {% trans "I make intricate, melodic and yet minimal music." %}
    br/
    br/
    | {% trans "I also create everything I need: this website, music videos, cover arts, automation scripts,..." %}
    br/
    ul.links-array.big
      li: span.firacode ->
      li: a.underline(href='about') {% trans "Learn more" %}
      li: a.underline(href='music') {% trans "Listen" %}
      li: a.underline(href='graphism') {% trans "See" %}   
    
  .sep
  h2 {% trans "Proudest tracks" %}
  .horizontal-grid-overflow.tracks
    .grid
      for track, collection in proudest
        a(href="{% url 'track' title=collection.slug play=track.slug %}")
          .cover(style="background-image:url('{% static 'music/images/square/'|add:collection.slug|add:'.jpg'%}')")
            if collection.kind != 'SG'
              if collection.cover_color == 'D'
                span.light=track.title
              else
                span.dark=track.title
    a(href='music')
      .arrow
  .sep
  h2 {% trans "Cherry-picked artworks" %}
  p.details-h2 {% trans "Excluding cover arts" %}
  .horizontal-grid-overflow.artworks
    .grid
      a(href="Illustration_Ink-Bottle.jpg")
        .cover.img1
      a(href="Banner_FreeZaxe.png")
        .cover.img2.large
      a(href="Favicon_RecCube.png")
        .cover.img3
      a(href="Banner_Les-Harobases.png")
        .cover.img4.large
    a(href='music')
      .arrow
  .sep

  h2 {% trans "Still want more?" %}
  p.details-h2 {% trans "Click on the big + !" %}
{% endblock content %}

{% block typedtitles %}
script.
    var typedTitle = new Typed("#typedTitle", {
    stringsElement: "#typedTitleSource",
    typeSpeed: 50,
    backSpeed: 25,
    backDelay:2800,
    loop: true,
    loopCount: Infinity
    });
{% endblock typedtitles %}